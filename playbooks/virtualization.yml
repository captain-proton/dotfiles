---
- name: Install and configure virtualization support
  hosts: all
  gather_facts: true

  handlers:
    - name: Install libvirt vagrant plugin
      ansible.builtin.command:
        cmd: vagrant plugin install vagrant-libvirt
      changed_when: true
      environment: "{{ __vagrant_env }}"

    - name: Install vagrant-dns plugin
      ansible.builtin.command:
        cmd: vagrant plugin install vagrant-dns
      changed_when: true
      environment: "{{ __vagrant_env }}"

  vars:
    __virtualization_libvirt_storage_pool_name: "{{ virtualization_libvirt_storage_pool_name | default('default') }}"
    __vagrant_env:
      VAGRANT_DISABLE_STRICT_DEPENDENCY_ENFORCEMENT: "1"

  tasks:
    - name: Install qemu/kvm, libvirt and its dependencies
      become: true
      community.general.pacman:
        name: "{{ item }}"
        state: present
      loop:
        - qemu-desktop
        - virt-manager
        - libvirt
        - iptables-nft
        - dnsmasq
        - dmidecode
        - bridge-utils
        - guestfs-tools
        - swtpm

    - name: Ensure the current user is part of the libvirt group
      become: true
      ansible.builtin.user:
        name: "{{ ansible_env.USER }}"
        groups:
          - libvirt
        append: true

    - name: Ensure the libvirtd service is started
      become: true
      ansible.builtin.systemd:
        name: libvirtd
        state: started
        enabled: true

    - name: Set the UNIX domain socket group ownership
      become: true
      ansible.builtin.lineinfile:
        path: /etc/libvirt/libvirtd.conf
        regexp: '^unix_sock_group '
        insertafter: '^#unix_sock_group '
        line: 'unix_sock_group = "libvirt"'

    - name: Set the UNIX socket permissions for the R/W socket.
      become: true
      ansible.builtin.lineinfile:
        path: /etc/libvirt/libvirtd.conf
        regexp: '^unix_sock_rw_perms '
        insertafter: '^#unix_sock_rw_perms '
        line: 'unix_sock_rw_perms = "0770"'

    - name: Configure libvirt default uri
      ansible.builtin.lineinfile:
        path: "{{ home }}/.xprofile"
        line: "export LIBVIRT_DEFAULT_URI='qemu:///system'"

    - name: Check if vagrant is installed
      ansible.builtin.command:
        cmd: command -v vagrant
      changed_when: false
      failed_when: false
      register: vagrant_cmd

    - name: Install vagrant if necessary
      become: true
      community.general.pacman:
        name: "{{ item }}"
        state: present
      when: vagrant_cmd.stdout | length == 0
      loop:
        - vagrant
        - rubygems
        - ruby-bundled-gems
        - ruby-default-gems
        - ruby-racc

    - name: List vagrant plugins
      ansible.builtin.command:
        cmd: vagrant plugin list
      changed_when: false
      register: vagrant_plugins

    - name: Check vagrant plugin vagrant-libvirt
      ansible.builtin.debug:
        msg: "vagrant-libvirt plugin not present"
      when: '"vagrant-libvirt" not in vagrant_plugins.stdout'
      notify: Install libvirt vagrant plugin

    - name: Check vagrant plugin vagrant-dns
      ansible.builtin.command:
        cmd: vagrant plugin list
      changed_when: '"vagrant-dns" not in vagrant_plugins.stdout'
      notify: Install vagrant-dns plugin

    - name: Make libvirt the default provider for vagrant
      ansible.builtin.lineinfile:
        path: "{{ home }}/.zprofile"
        line: 'export VAGRANT_DEFAULT_PROVIDER=libvirt'

    - name: Place global Vagrantfile for default configurations
      ansible.builtin.template:
        src: "../templates/libvirt_vagrantfile.j2"
        dest: "{{ home }}/.vagrant.d/Vagrantfile"
        mode: "0644"
