---
- name: Install and configure ollama
  hosts: all

  vars:
    _ollama_default_path: "{{ home }}/.ollama"
    _ollama_path: "{{ ollama_path | default(_ollama_default_path) }}"
    _ollama_version: "{{ ollama_version | default('v0.5.11') }}"
    _ollama_github_download_url: "https://github.com/ollama/ollama/releases/download/{{ _ollama_version }}/ollama-linux-amd64.tgz"
    _ollama_download_url: "{{ ollama_download_url | default(_ollama_github_download_url) }}"
    _ollama_archive_checksum: "sha256:aa386ce1c314686133f7abe9b561f3ef230f03f88bbdd1f583c951c4ab5378ad"
    _ollama_default_model_store: "{{ _ollama_path }}/models"
    _ollama_model_store: "{{ ollama_model_store | default(_ollama_default_model_store) }}"
    _ollama_cuda_visible_devices: "{{ ollama_cuda_visible_devices | default(0) }}"

  tasks:

    - name: Download ollama binary
      ansible.builtin.get_url:
        url: "{{ _ollama_download_url }}"
        dest: "/tmp/ollama.tgz"
        mode: "0644"
        checksum: "{{ _ollama_archive_checksum }}"

    - name: Create ollama path
      ansible.builtin.file:
        path: "{{ _ollama_path }}"
        state: directory
        mode: "0750"

    - name: Extract ollama
      ansible.builtin.unarchive:
        src: /tmp/ollama.tgz
        dest: "{{ _ollama_path }}"
        mode: "0750"

    - name: Link ollama binary to path
      ansible.builtin.file:
        src: "{{ _ollama_path }}/bin/ollama"
        dest: "{{ home }}/.local/bin/ollama"
        state: link

    - name: Configure ollama systemd service
      ansible.builtin.template:
        src: ../templates/ollama_systemd_service.j2
        dest: "{{ home }}/.config/systemd/user/ollama.service"
        mode: "0640"

    - name: Ensure model store exists
      ansible.builtin.file:
        path: "{{ _ollama_model_store }}"
        state: directory
        mode: "0750"

    - name: Create ollama systemd service
      ansible.builtin.systemd:
        name: ollama
        state: stopped
        enabled: false
        scope: user
        daemon_reload: true
